1. Write a blog on the difference between document and window objects.

DOCUMENT OBJECT MODEL

=> The document object represent a web page or any HTML document  that is loaded in the browser. When a web page is loaded, the browser creates a Document Object Model of the page. The document object represents the whole html document as a tree of Objects(HTML, HEAD, BODY, and other HTML tags). It is the root element that represents the html document.

That is each HTML document that gets loaded into a window becomes a document object. The document contains the contents of the page. Using document object, JavaScript can modify, add and delete the HTML elements, attributes CSS styles in the page

By accessing the document object, we can access the element in the HTML page. As mentioned above, with the help of document objects, we can add dynamic content to our web page. 

=>It is loaded inside the window. It is the object of window property.

=>All the tags, elements with attributes in HTML are part of the document.

=>The document object can be accessed either using  "window.document" property or just using "document"object directly as window is global object.

Eg:

Here, title is the property of document object.
                                                                        > window.document.title
                                                                        <- "JavaScript  | MDN"

                                                                        > document.title
                                                                        <- "JavaScript  | MDN"

Syntax:
               document.property_name;

=>Properties of document objects such as title, body, cookies, etc can also be accessed by a window like this window. document.title

Eg:
          document.title :  will return the title of the document
 
Some of the "properties" of document object are

head                      :            It returns the head element of the document.

title                       :             It returns the title element of the document.

URL                     :             It returns the complete URL of the document.

forms                    :             It returns all the elements of the form.

designMode          :             It is used to set documents as editable or read-only.

domain                 :             It returns the domain name of the document server.

doctype                 :             It returns the document’s doctype.

activeElement        :             It returns the currently active elements in the document.

body                      :             It returns the contents of the body element.

anchors                  :             It returns all <a> elements that have a name attribute.


=>Methods of Document:

Syntax:
                         document.method_name;

Some of the most commonly used "methods" are 

getElementById()                  :          It returns the object of the given ID. If no object with that id exists then it returns null.

getElementsByClassName()   :          It returns an object containing all the elements with the specified class names in the document as objects.

getElementsByName()           :          It returns an object containing all the elements with the specified name in the document as objects.

getElementsByTagName()     :          It returns an object containing all the elements with the specified tag names in the document as objects.

hasFocus()                             :          It returns a boolean value that indicates whether the document or element has focus or not.

addEventListener()                :          It is used to attach an event handler to the specified element.

adoptNode()                          :          It is used to adopt a node from another document and it returns a node object, representing the adopted node.

close()                                   :          It is used to close the output stream.

createAttribute()                    :          It is used to create an attribute node with the specified name and returns the attribute object.

=>The document is part of BOM (Browser Object Model i.e., it contains objects that represent the current browser window or tab. The topmost object in the BOM is the window object representing the window or tab or an iframe sometimes.Window object has properties like browser history, location and the device’s screen etc) and DOM (Document Object Model).


WINDOW OBJECT MODEL

=>The window object is the topmost object of the DOM hierarchy. It represents a browser window or frame that displays the contents of the webpage. Whenever a window appears on the screen to display the contents of the document, the window object is created. 

=>It is the very first object that is loaded in the browser. It is the object of the browser.

The window object represents a window/tab containing a DOM document where as document object is property of window object that points to the DOM document loaded in that window.

Global objects, functions, and variables of JavaScript are members of the window object.

=>We can access the window from the window only. i.e. window.window  

=>Another major difference is that both window object and document object have properties and methods. Few method names are same in both objects but with different behavior. 

Eg:
          window.open() opens a new tab or window   whereas  document.open() creates a blank document within the window.
  
=>Properties of the window object cannot be accessed by the document object.

Syntax:
               window.property_name;
Eg:

               window.innerHeight     :         It will return the height of the content area of the browser.

Some of the "properties" of the window are
                
innerWidth                  :         It is used to get the width of the content area of the browser window.
               
Name                           :         It contains the name of the referenced window.
               
Window                       :         It returns the current window or frame.
               
Navigator                     :          It returns a reference to the navigator object.
               
outerHeight                 :          It will get the height of the outside of the browser window.
               
outerWidth                  :          It will get the width of the outside of the browser window.
               
Status                           :          It overrides the default status and places a message in the status bar.

=>Methods of Window:

Syntax:
                       window.method_name;

Some of the "methods" of  window objects that are commonly used are 

alert()                :         It is used to display an alert box. It displays a specified message along with an OK button and is generally used to make sure that 
                                    the  information comes through the user.

blur()                :         It is used to remove focus from the current window.

clearInterval()    :        It clears the interval which has been set by the setInterval() function before that.

clearTimeout()   :        It clears the timeout which has been set by the setTimeout() function before that.

close()                :        It is used for closing a certain window or tab of the browser which was previously opened.

confirm()            :        It is used to display a model dialog with an optional message and two buttons i.e. OK and Cancel. It returns true if the user 
                                    clicks “OK”, and false otherwise.                                   

focus()                :        It is used to give focus to an element in the current window.

open()                :        It is used to open a new tab or window with the specified URL and name.

moveBy()           :        It is used for moving a window with a specified number of pixels relative to its current coordinates.

setInterval()        :        It repeats a given function at every given time interval.

setTimeout()      :        It executes a function, after waiting a specified number of milliseconds.

stop()                 :        It is used to stop the window from loading resources in the current browsing context



Here, the window is part of BOM(Browser Object Model - it means that it has the objects that  represent the current browser window or tab), not DOM(document Object Model).


















